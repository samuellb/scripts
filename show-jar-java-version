#!/bin/sh
#
#  show-jar-java-version -- Determines the target Java version of a JAR file
#
#  Copyright (c) 2014 Samuel Lid√©n Borell <samuel@kodafritt.se>
#  
#  Permission is hereby granted, free of charge, to any person obtaining a copy
#  of this software and associated documentation files (the "Software"), to deal
#  in the Software without restriction, including without limitation the rights
#  to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
#  copies of the Software, and to permit persons to whom the Software is
#  furnished to do so, subject to the following conditions:
#  
#  The above copyright notice and this permission notice shall be included in
#  all copies or substantial portions of the Software.
#  
#  THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
#  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
#  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
#  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
#  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
#  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
#  THE SOFTWARE.
#


find_in_manifest() {
    createdby=""
    target=""
    IFS=": "
    while read header value; do
        if [ "x$header" = "xCreated-By" ]; then
            createdby="$value"
        elif [ "x$header" = "xX-Compile-Target-JDK" ]; then
            target="$value"
        fi
    done
    
    if [ -n "$target" ]; then
        echo "$target"
    elif [ -n "$createdby" ]; then
        echo "$createdby" | grep -oE '^([0-9]+\.[0-9]+)'
    fi
}

determine_version() {
    manifestversion="`unzip -p -- "$1" META-INF/MANIFEST.MF | find_in_manifest`"
    if [ -n "$manifestversion" ]; then
        echo "$manifestversion"
        return
    fi
    
    someclass="`jar tf "$1" | grep -E '\.class$' | head -n 1`"
    if [ -z "$someclass" ]; then
        echo "empty archive";
        return
    fi
    
    #unzip -p -- "$1" "$some_class" | head -c 8 | tail -c 2 | hd
    majorversion="`unzip -p -- "$1" "$someclass" | hexdump -v -e '/1 "%02X" "%02X\n"' -s 6 -n 2`"
    case "$majorversion" in
        002D) echo "1.1";;
        002E) echo "1.2";;
        002F) echo "1.3";;
        0030) echo "1.4";;
        0031) echo "1.5";;
        0032) echo "1.6";;
        0033) echo "1.7";;
        0034) echo "1.8";;
        *) echo "unknown java major version $majorversion";;
    esac
}

if [ $# = 0 ]; then
    echo "usage: $0 JARFILES..."
    exit 1
elif [ $# = 1 ]; then
    determine_version "$1"
else
    while [ $# != 0 ]; do
        printf "%s: " "$1"
        determine_version "$1"
        shift
    done
fi

